// eslint-disable
import { getRawBody } from '@sveltejs/kit/node'
import { fetch, Response, Request, Headers } from '@sveltejs/kit/install-fetch'

global.fetch = fetch
global.Response = Response
global.Request = Request
global.Headers = Headers

import { init, render } from './app.js'

init()

export { getRawBody, render }
export default async function (req, res, next) {
  let body
  try {
    body = await getRawBody(req)
  } catch (err) {
    err.status = err.status || 400
    err.reason = err.reason || 'Invalid request body'
    throw err
  }
  const base = `https://${req.headers.host}`
  const { pathname, searchParams } = new URL(req.url, base)
  const rendered = await render({
    method: req.method,
    headers: req.headers, // TODO: what about repeated headers, i.e. string[]
    path: pathname,
    query: searchParams,
    rawBody: body
  })

  if (rendered) {
    res.status(rendered.status)
    res.set(rendered.headers)

    if (rendered.body) res.write(rendered.body)

    res.end()
  } else {
    next()
  }
}
